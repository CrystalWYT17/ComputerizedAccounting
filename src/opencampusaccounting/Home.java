/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package opencampusaccounting;
import java.util.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

import javax.swing.table.DefaultTableModel;

import org.jfree.chart.*;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

import javax.swing.*;
import javax.net.ssl.*;
//import org.jfree.chart.ChartFactory;
//import org.jfree.chart.ChartFrame;
//import org.jfree.chart.JFreeChart;
//import org.jfree.chart.plot.CategoryPlot;
//import org.jfree.chart.plot.PiePlot;
//import org.jfree.chart.plot.PlotOrientation;
//import org.jfree.data.category.DefaultCategoryDataset;
//import org.jfree.data.general.DefaultPieDataset;
/**
 *
 * @author ASUS
 */
public class Home extends javax.swing.JFrame {
ImageIcon image1,image2,image3,image4,image5,image6,image7,image8,image9;
    /**
     * Creates new form Home
     */
    public Home() { setTitle("Computerized Accounting");
        initComponents();
        image1=new ImageIcon(getClass().getResource("sale.png"));
        image2=new ImageIcon(getClass().getResource("purchase1.png"));
        image3=new ImageIcon(getClass().getResource("payin2.png"));
        image5=new ImageIcon(getClass().getResource("payout2.jpg"));
        image4=new ImageIcon(getClass().getResource("report12.jpg"));
        image6=new ImageIcon(getClass().getResource("help.png"));
        image7=new ImageIcon(getClass().getResource("about.png"));
        image8=new ImageIcon(getClass().getResource("piechart.png"));
        image9=new ImageIcon(getClass().getResource("barchart.png"));
        
        jLabel1=new JLabel(image1);
        jLabel2=new JLabel(image2);
        jLabel3=new JLabel(image3);
        jLabel5=new JLabel(image5);
        jLabel4=new JLabel(image4);
        jLabel6=new JLabel(image6);
        jLabel7=new JLabel(image7);
        jLabel9=new JLabel(image8);
        jLabel10=new JLabel(image9);
        
        jLabel1.setBounds(230, 50, 120, 120);
        jLabel2.setBounds(530, 50, 120, 120);
        jLabel3.setBounds(850, 50, 120, 120);
        jLabel4.setBounds(230, 260, 120, 120);
        jLabel5.setBounds(530, 260, 120, 120);
        jLabel6.setBounds(850, 260, 120, 120);
        jLabel7.setBounds(530, 470, 120, 120);
        jLabel9.setBounds(850, 470, 120, 120);
        jLabel10.setBounds(230,470,120,120);
        add(jLabel1);
        add(jLabel2);
        add(jLabel3);
        add(jLabel4);
        add(jLabel5);
        add(jLabel6);
        add(jLabel7);
        add(jLabel9);
        add(jLabel10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSale = new javax.swing.JButton();
        btnPurchase = new javax.swing.JButton();
        btnPayIn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnPayOut = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnAbout = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnPurchase1 = new javax.swing.JButton();
        btnPurchase2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSale.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSale.setText("Sale");
        btnSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleActionPerformed(evt);
            }
        });

        btnPurchase.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPurchase.setText("Purchase");
        btnPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchaseActionPerformed(evt);
            }
        });

        btnPayIn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPayIn.setText("Pay-In");
        btnPayIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayInActionPerformed(evt);
            }
        });

        btnPayOut.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPayOut.setText("Pay-Out");
        btnPayOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayOutActionPerformed(evt);
            }
        });

        btnHelp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnAbout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAbout.setText("About");
        btnAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Report","Day Book", "Monthly Report", "Trial Balance","Journal","Profit & Loss" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Log Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("Welcome Home Page");

        btnPurchase1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPurchase1.setText("Pie Chart");
        btnPurchase1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchase1ActionPerformed(evt);
            }
        });

        btnPurchase2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPurchase2.setText("Bar Chart");
        btnPurchase2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchase2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSale)
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPurchase)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(btnPayOut, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(124, 124, 124)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPayIn)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnHelp)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(jLabel2)
                        .addGap(355, 355, 355)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(113, 113, 113))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(577, 577, 577)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(372, 372, 372)
                                .addComponent(jLabel5)
                                .addGap(375, 375, 375)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnPurchase2))
                                .addGap(193, 193, 193)
                                .addComponent(btnAbout)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPurchase1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(364, 364, 364))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButton1)))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSale, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPayIn)
                    .addComponent(btnPurchase))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(btnPayOut)
                            .addComponent(btnHelp))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel7)
                                .addGap(61, 61, 61)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addGap(128, 128, 128))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnPurchase1)
                                    .addComponent(btnAbout)
                                    .addComponent(btnPurchase2))
                                .addContainerGap())))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleActionPerformed
        Sale S=new Sale();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        S.setSize(d.width,d.height);
        dispose();
        S.setVisible(true);
    }//GEN-LAST:event_btnSaleActionPerformed

    private void btnPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchaseActionPerformed
        Purchase P=new Purchase();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        P.setSize(d.width,d.height);
        dispose();
        P.setVisible(true);
    }//GEN-LAST:event_btnPurchaseActionPerformed

    private void btnPayInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayInActionPerformed
        
        PayinWithTwoAccountInDatabase P=new PayinWithTwoAccountInDatabase();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        P.setSize(d.width,d.height);
        dispose();
        P.setVisible(true);
    }//GEN-LAST:event_btnPayInActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem()=="Day Book"){
             DayBook db=new DayBook();
             Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
             db.setSize(d.width,d.height);
             dispose();
             db.setVisible(true);   
        }
        
        else if(jComboBox1.getSelectedItem()=="Monthly Report"){
            CAReport ca=new CAReport();
            Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
            ca.setSize(d.width,d.height);
            dispose();
            ca.setVisible(true);
        }
        else if(jComboBox1.getSelectedItem()=="Trial Balance"){
            TrialBalance tb=new TrialBalance();
            Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
            tb.setSize(d.width,d.height);
            dispose();
            tb.setVisible(true);
        }
        else if(jComboBox1.getSelectedItem()=="Journal"){
            Journal j=new Journal();
            Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
            j.setSize(d.width,d.height);
            dispose();
            j.setVisible(true);
        }
        else if(jComboBox1.getSelectedItem()=="Profit & Loss"){
            profit_loss p=new profit_loss();
            Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
            p.setSize(d.width,d.height);
            dispose();
            p.setVisible(true);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnPayOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayOutActionPerformed
        PayOut P=new PayOut();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        P.setSize(d.width,d.height);
        dispose();
        P.setVisible(true);
    }//GEN-LAST:event_btnPayOutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Add1 A=new Add1();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        A.setSize(d.width,d.height);
        dispose();
        A.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutActionPerformed
        JOptionPane.showMessageDialog(null, "Log in >> Home;\nto create account  >> Sign up >> fill data and  Save >> Home ;\nHome \nclick Sales button to fill the sold out goods;\nclick Purchase button to buy items from suppliers;\nclick Pay_In button to record the  debt which gets from customers;\nclick Pay_Out button to record the debt which pays for suppliers;\nclick Report button to see the report with you wish such as 1. CA Report \n2. Day Book\n3. Monthly Balance\n4. Trial Balance\n5. Journal");
    }//GEN-LAST:event_btnAboutActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(null,"about Application\nThis is a computerized accounting application "
                + ".\nWe can make financial report without manual and can do the following:"
                + "\nto Create a financial account.\nto Save the log of users' sales."
                + "\nto save the sold out goods.\nto save bought goods.\nto save pay_in records."
                + "\nto save pay_out records.\nShow the report with calculated Journal."
                + "\nShow the report with calculated Trial Balance Sheet.\nComputerized Accounting copyright 2017 all rights reserverd."
                + "\nVersion 1.1\nRelease Date:22 July,2017.\nThis app is developed by Second Year,Section A."
                + "\n\nEmail info :wuttyeetun1721999@gmail.com\n                    khinmemelatt@uit.edu.mm\n                    iamthiriyadanarag990jb@gmail.com\n"
                + "                    moenandiaung@uit.edu.mm\n                    kyawthmuekhin@uit.edu.mm\n"
                + "Address    : University of Information Technology , Parami Road ,Hlaing Campus");
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnPurchase1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchase1ActionPerformed
        // TODO add your handling code here:
       /* piechart p=new piechart();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        p.setSize(d.width,d.height);
        dispose();
        p.setVisible(true);*/
       /////////////////////////////////
       databasePieChart();
    }//GEN-LAST:event_btnPurchase1ActionPerformed

    private void btnPurchase2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchase2ActionPerformed
/*            BarChart b=new BarChart();
            Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        b.setSize(d.width,d.height);
        dispose();
        b.setVisible(true);*/
databaseBarChart();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPurchase2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Home H=new Home();
                Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
                H.setSize(d.width,d.height);
                H.setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbout;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnPayIn;
    private javax.swing.JButton btnPayOut;
    private javax.swing.JButton btnPurchase;
    private javax.swing.JButton btnPurchase1;
    private javax.swing.JButton btnPurchase2;
    private javax.swing.JButton btnSale;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

public void databasePieChart(){
        String url = "jdbc:mysql://localhost:3306/computerizedaccounting";
			 String username = "root";
			 String password = "wuttyeetun";
			 
			 Connection conn;
			 Statement stmt;
			 ResultSet rs;
                         String item;int price,qty;int totalUnicorn=0; int totalEgg=0; int totalDIY=0; int totalStraw=0; int totalBerry=0; int totalGrape=0;int totalFruity=0;
                         int totalStrawIce=0;int totalChoco=0;
                         int totalVanila=0;int totalSushi=0;int totalKey=0;int totalUIT=0;
                         char hint='a';
			 
			 String st="";
                         
			 String query = "SELECT * FROM CUSTOMER";
                         //String query1="SELECT "
			// String query= "SELECT * FROM STUDENT WHERE stuaddress='Pathein'";
			String [][]items={{"Unicorn Cupcake","U"},{"Egg Tart","E"},{"DIY and dcorate","D"},{"Strawberry Yogurt","S"},{"Berry Yogurt","B"},{"Grape Yogurt","G"},
                                        {"Fruity Yogurt","F"},{"Strawberry Ice_cream","I"},{"Chocolate Ice_cream","C"},
                                        {"Vanila Ice_cream","V"},{"Sushi","J"},{"Key_Chain","K"},{"UIT_Book","T"}};
                        //String []shortcut={"U","E","D","S","B","G","F","I","C","V","J","K","T"};
			 try{ 
				 Class.forName("com.mysql.jdbc.Driver"); //Register JDBC driver
				 conn = DriverManager.getConnection(url, username, password); //Open a connection
				 stmt = conn.createStatement();  //creates a Statement object for sending SQL statements to the database			 
			     rs = stmt.executeQuery(query);  //Execute a query
			     
			     while(rs.next()){   //Extract data from result set
			    	 
			    	 //String rno=rs.getString(1);
			    	 item=rs.getString(4);
			      	 qty=rs.getInt(6);
			      	 price=rs.getInt(7);
                                  //System.out.println(item+qty+price);
			      	 if(qty>0 & price>0) {
                                     System.out.println(qty+" "+price);
                                     for(int i=0; i<items.length; i++){
                                         if(item.equalsIgnoreCase(items[i][0])){
                                          hint=items[i][0].charAt(0);
                                          System.out.println(hint);
                                         switch(hint){
                                         case'U':totalUnicorn+=qty*price;break;//totalDIY=0; int totalStraw=0; int totalBerry=0; int totalGrape=0;int totalVanila=0;int toalSushi=0;int toalKey=0;int toalUIT=0;
                                         case'E':totalEgg+=price;break;
                                         case'D':totalDIY+=price;break;
                                         case'S':totalStraw+=price;break;
                                         case'B':totalBerry+=price;break;
                                         case'G':totalGrape+=price;break;
                                         case'F':totalFruity+=price;break;
                                         case'I':totalStrawIce+=price;break;
                                         case'C':totalChoco+=price;break;
                                         case'V':totalVanila+=price;break;
                                         case'J':totalSushi+=price;break;
                                         case'K':totalKey+=price;break;
                                         case'T':totalUIT+=price;
                                            }   
                                         }
                                     }
                                 }
                                 
                                 
			     }		
                             System.out.println("Unicorn="+totalUnicorn+"\nEgg="+totalEgg+"\nDIY="+totalDIY+"\nStrawberry="+totalStraw+"\nBerry="+totalBerry);
			     //JOptionPane.showMessageDialog(this, "Student Information\n \n"+st, this.getTitle(),JOptionPane.INFORMATION_MESSAGE);
			     rs.close(); 
			     conn.close();
                             
                             DefaultPieDataset pieDataset=new DefaultPieDataset();
                             if(totalUnicorn>0){
                                 pieDataset.setValue("Unicorm Cupcake",new Integer(totalUnicorn));System.out.println("Unicorn="+totalUnicorn);
                             }
                              if(totalEgg>0){
                                 pieDataset.setValue("Egg Tart",new Integer(totalEgg));System.out.println("EGG="+totalEgg);
                             }
                              if(totalDIY>0){
                                 pieDataset.setValue("DIY and dcorate",new Integer(totalDIY));System.out.println("DIY="+totalDIY);
                             }   
                              if(totalStraw>0){
                                 pieDataset.setValue("Strawberry Yogurt",new Integer(totalStraw));System.out.println("Strawberry="+totalStraw);
                             }
                              if(totalBerry>0){
                                 pieDataset.setValue("Berry Yogurt",new Integer(totalBerry));System.out.println("Berry="+totalBerry);
                             }
                              if(totalGrape>0){
                                 pieDataset.setValue("Grape Yogurt",new Integer(totalGrape));System.out.println("Grape="+totalGrape);
                             }   
                              if(totalFruity>0){
                                 pieDataset.setValue("Fruity Yogurt",new Integer(totalFruity));System.out.println("Fruity="+totalFruity);
                             }
                              if(totalStrawIce>0){
                                 pieDataset.setValue("Strawberry Ice_cream",new Integer(totalStrawIce));System.out.println("StrawIce="+totalStrawIce);
                             }
                              if(totalChoco>0){
                                 pieDataset.setValue("Chocolate Ice_cream",new Integer(totalChoco));System.out.println("Choco="+totalChoco);
                             }
                              if(totalVanila>0){
                                 pieDataset.setValue("Vanila",new Integer(totalVanila));System.out.println("Vanila="+totalVanila);
                             }
                              if(totalSushi>0){
                                 pieDataset.setValue("Sushi",new Integer(totalSushi));System.out.println("Sushi="+totalSushi);
                             }
                              if(totalKey>0){
                                 pieDataset.setValue("Key Chain",new Integer(totalKey));System.out.println("Key="+totalKey);
                             }
                              if(totalUIT>0){
                                 pieDataset.setValue("UIT Book",new Integer(totalUIT));System.out.println("UIT="+totalUIT);
                             }
                                 
                                 JFreeChart chart=ChartFactory.createPieChart("List of Items Pie Chart",pieDataset,true,true,true); 
                                 PiePlot P;
                                     P = (PiePlot) chart.getPlot();
                                    // P.setForegroundAlpha(TOP_ALIGNMENT);
                                     ChartFrame frame=new ChartFrame("Pie Chart",chart);
                                     frame.setVisible(true);
                                     frame.setSize(450,500);
                                 
			 }
			 catch (ClassNotFoundException cnfe){
			      System.out.println("Driver could not be loaded: " + cnfe);
			 }
			 catch (SQLException sqle){
			      System.out.println("SQL Exception thrown: " + sqle);
			 }
		}

    private void databaseBarChart() {
        String url = "jdbc:mysql://localhost:3306/computerizedaccounting";
			 String username = "root";
			 String password = "wuttyeetun";
			 
			 Connection conn;
			 Statement stmt;
			 ResultSet rs;
                         String item;int price,qty;int totalUnicorn=0; int totalEgg=0; int totalDIY=0; int totalStraw=0; int totalBerry=0; int totalGrape=0;int totalFruity=0;
                         int totalStrawIce=0;int totalChoco=0;
                         int totalVanila=0;int totalSushi=0;int totalKey=0;int totalUIT=0;
                         char hint='a';
			 
			 String st="";
                         
			 String query = "SELECT * FROM CUSTOMER";
                         //String query1="SELECT "
			// String query= "SELECT * FROM STUDENT WHERE stuaddress='Pathein'";
			String [][]items={{"Unicorn Cupcake","U"},{"Egg Tart","E"},{"DIY and dcorate","D"},{"Strawberry Yogurt","S"},{"Berry Yogurt","B"},{"Grape Yogurt","G"},
                                        {"Fruity Yogurt","F"},{"Strawberry Ice_cream","I"},{"Chocolate Ice_cream","C"},
                                        {"Vanila Ice_cream","V"},{"Sushi","J"},{"Key_Chain","K"},{"UIT_Book","T"}};
                        //String []shortcut={"U","E","D","S","B","G","F","I","C","V","J","K","T"};
                        try{ 
				 Class.forName("com.mysql.jdbc.Driver"); //Register JDBC driver
				 conn = DriverManager.getConnection(url, username, password); //Open a connection
				 stmt = conn.createStatement();  //creates a Statement object for sending SQL statements to the database			 
			     rs = stmt.executeQuery(query);  //Execute a query
			     
			     while(rs.next()){   //Extract data from result set
			    	 
			    	 //String rno=rs.getString(1);
			    	 item=rs.getString(4);
			      	 qty=rs.getInt(6);
			      	 price=rs.getInt(7);
			      	 if(qty>0 & price>0) {
                                     for(int i=0; i<items.length; i++){
                                         if(item.equalsIgnoreCase(items[i][0])){
                                             System.out.println(items[i][0]);
                                          hint=items[i][1].charAt(0);
                                          System.out.println(hint);
                                         switch(hint){
                                         case'U':totalUnicorn+=qty*price;break;//totalDIY=0; int totalStraw=0; int totalBerry=0; int totalGrape=0;int totalVanila=0;int toalSushi=0;int toalKey=0;int toalUIT=0;
                                         case'E':totalEgg+=price;break;
                                         case'D':totalDIY+=price;break;
                                         case'S':totalStraw+=price;break;
                                         case'B':totalBerry+=price;break;
                                         case'G':totalGrape+=price;break;
                                         case'F':totalFruity+=price;break;
                                         case'I':totalStrawIce+=price;break;
                                         case'C':totalChoco+=price;break;
                                         case'V':totalVanila+=price;break;
                                         case'J':totalSushi+=price;break;
                                         case'K':totalKey+=price;break;
                                         case'T':totalUIT+=price;break;
                                        }
                                         }
                                     }
                                 }
                                 
                              
			     }		
			     //JOptionPane.showMessageDialog(this, "Student Information\n \n"+st, this.getTitle(),JOptionPane.INFORMATION_MESSAGE);
			     rs.close(); 
			     conn.close();
                             
                                
                                  DefaultCategoryDataset barChartData=new DefaultCategoryDataset();
                                  //System.out.println("Start");
                                  //System.out.println("TotalUnicorn="+totalUnicorn);
                                  
                                  if(totalUnicorn>0){
                                 barChartData.setValue(new Integer(totalUnicorn),"Prices","Unicorn Cupcake");//System.out.println("TotalUnicorn="+totalUnicorn);
                             }
                              if(totalEgg>0){
                                barChartData.setValue(new Integer(totalEgg),"Prices","Egg Tart");
                             }
                              if(totalDIY>0){
                                 barChartData.setValue(new Integer(totalDIY),"Prices","DIY and dcorate");
                             }   
                              if(totalStraw>0){
                                 barChartData.setValue(new Integer(totalStraw),"Prices","Strawberry Yogurt");
                             }
                              if(totalBerry>0){
                                 barChartData.setValue(new Integer(totalBerry),"Prices","Berry Yogurt");
                             }
                              if(totalGrape>0){
                                 barChartData.setValue(new Integer(totalGrape),"Prices","Grape Yogurt");
                             }   
                              if(totalFruity>0){
                                 barChartData.setValue(new Integer(totalFruity),"Prices","Fruity Yogurt");
                             }
                              if(totalStrawIce>0){
                                barChartData.setValue(new Integer(totalStrawIce),"Prices","Strawberry Ice_Cream");
                             }
                              if(totalChoco>0){
                                 barChartData.setValue(new Integer(totalChoco),"Prices","Chocolate Ice_Cream");
                             }
                              if(totalVanila>0){
                                 barChartData.setValue(new Integer(totalVanila),"Prices","Vanila Ice_Cream");
                             }
                              if(totalSushi>0){
                                 barChartData.setValue(new Integer(totalSushi),"Prices","Sushi");
                             }
                              if(totalKey>0){
                                 barChartData.setValue(new Integer(totalKey),"Prices","Key_Chain");
                             }
                              if(totalUIT>0){
                                 barChartData.setValue(new Integer(totalUIT),"Prices","UIT_Book");System.out.println("UIT="+totalUIT);
                             }
                                  
                                  
                                 
                                // barChartData.setValue("Price",new Integer(price));
                                 JFreeChart chart=ChartFactory.createBarChart("List Items","Items","Prices",barChartData,PlotOrientation.VERTICAL,false,true,false); 
                                 CategoryPlot bar=chart.getCategoryPlot();
                                 bar.setRangeGridlinePaint(Color.BLUE);
                                 ChartFrame frame=new ChartFrame("Bar Chart of Items",chart);
                                 /*ChartPanel panel=new ChartPanel(chart);
                                     panelChart.removeALL();
                                     panelChart.add(panel,BorderLayout.CENTER);
                                     panelChart.validate();*/
                                 frame.setVisible(true);
                                 frame.setSize(450,500);
			 }
			 catch (ClassNotFoundException cnfe){
			      System.out.println("Driver could not be loaded: " + cnfe);
			 }
			 catch (SQLException sqle){
			      System.out.println("SQL Exception thrown: " + sqle);
			 }
        
        
        
        
    }
    
}
